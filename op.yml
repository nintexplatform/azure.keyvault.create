name: github.com/opspec-pkgs/azure.keyvault.create
description: creates an azure keyvault (if doesn't already exist)
inputs:
  subscriptionId:
    string:
      constraints: { minLength: 1 }
      description: id of azure subscription
  loginId:
    string:
      constraints: { minLength: 1 }
      description: id of user, service principal, or app to login with
  loginSecret:
    string:
      constraints: { minLength: 1 }
      description: secret of user, service principal, or app to login with
      isSecret: true
  name:
    string:
      constraints: { minLength: 1 }
      description: name of provisioned server
  resourceGroup:
    string:
      constraints: { minLength: 1 }
      description: name of azure resource group
  location:
    string:
      constraints: { minLength: 1 }
      description: location of provisioned vault
      default: westus
  enabledForDeployment:
    string:
      constraints: { enum: ['true', 'false'] }
      description: whether VM's may retrieve secret certs from the provisioned vault
      default: 'true'
  enabledForDiskEncryption:
    string:
      constraints: { enum: ['true', 'false'] }
      description: whether disk encryption may retrieve secrets & unwrap keys from the provisioned vault
      default: 'true'
  enabledForTemplateDeployment:
    string:
      constraints: { enum: ['true', 'false'] }
      description: whether resource manager may retrieve secrets from the provisioned vault
      default: 'true'
  noSelfPerms:
    string:
      constraints: { enum: ['true', 'false'] }
      description: whether to add perms for the current user/service to the provisioned vault
      default: 'false'
  sku:
    string:
      constraints: { enum: [premium, standard] }
      description: sku for the provisioned vault
      default: standard
  loginTenantId:
    string:
      constraints: { minLength: 1 }
      description: tenant id of user, service principal, or app to login with
      default: " "
  loginType:
    string:
      constraints: { enum: [user, sp]}
      description: type of login; 'user' (default) or 'sp' for service principal
      default: user
  tags:
    string:
      description: (space separated) tags (in key[=value] format) for provisioned storage account
      default: " "
version: 2.1.0
run:
  container:
    image: { ref: 'azuresdk/azure-cli-python:2.0.25' }
    cmd: [ /cmd.sh ]
    files: { /cmd.sh }
    envVars:
      subscriptionId:
      loginId:
      loginSecret:
      name:
      resourceGroup:
      location:
      enabledForDeployment:
      enabledForDiskEncryption:
      enabledForTemplateDeployment:
      noSelfPerms:
      sku:
      loginTenantId:
      loginType:
      tags:
